import pool from '../../../../lib/db';import jwt from 'jsonwebtoken';import errorHandler from '../../../../lib/errorHandler';// This API endpoint allows an admin to manually fix a stuck enrollment status.export default async function handler(req, res) {    if (req.method !== 'POST') {        return res.status(405).json({ message: 'Method Not Allowed' });    }    const token = req.cookies.token;    if (!token) return res.status(401).json({ message: 'Not authenticated' });    try {        const decoded = jwt.verify(token, process.env.JWT_SECRET);        if (!['admin', 'head'].includes(decoded.role)) {            return res.status(403).json({ message: 'Not authorized' });        }        const { id: enrollmentId } = req.query;        const client = await pool.connect();        try {            await client.query('BEGIN');            // Fetch the enrollment to ensure it exists and is in a pending state            const enrollmentResult = await client.query(                'SELECT * FROM enrollments WHERE id = $1 AND status IN (\'pending_payment\', \'pending_approval\')',                [enrollmentId]            );            if (enrollmentResult.rows.length === 0) {                await client.query('ROLLBACK');                return res.status(404).json({ message: 'Enrollment not found or is already active.' });            }            const enrollment = enrollmentResult.rows[0];            // Check if the course has launched to set the correct new status            const courseResult = await client.query(                'SELECT is_launched FROM courses WHERE id = $1',                [enrollment.course_id]            );                        const isLaunched = courseResult.rows[0]?.is_launched;            const newEnrollmentStatus = isLaunched ? 'active' : 'waiting_start';            // Manually update the enrollment status            await client.query(                'UPDATE enrollments SET status = $1 WHERE id = $2',                [newEnrollmentStatus, enrollmentId]            );            await client.query('COMMIT');            res.status(200).json({                 message: 'تم تحديث حالة التسجيل بنجاح.'            });        } catch (error) {            await client.query('ROLLBACK');            throw error;        } finally {            client.release();        }    } catch (err) {        console.error("Manual enrollment fix error:", err);        errorHandler(err, res);    }}